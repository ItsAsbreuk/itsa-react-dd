{
    "project": {
        "name": "itsa-react-xxxxx",
        "description": "React-Component: xxxxx",
        "logo": "https://avatars0.githubusercontent.com/u/8314644?v=3&s=84",
        "version": "0.0.1"
    },
    "files": {
        "lib/drag-drop-node.js": {
            "name": "lib/drag-drop-node.js",
            "modules": {
                "drag": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/drag-drop.js": {
            "name": "lib/drag-drop.js",
            "modules": {},
            "classes": {
                "DD": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/extend-element.js": {
            "name": "lib/extend-element.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "drag": {
            "name": "drag",
            "submodules": {},
            "elements": {},
            "classes": {
                "DD": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/drag-drop.js",
            "line": 1,
            "description": "Provides `drag and drop` functionality, without dropzones.\nFor `dropzone`-support, you should use the module: `drag-drop`.\n\n\n<i>Copyright (c) 2014 ITSA - https://github.com/itsa</i>\nNew BSD License - http://choosealicense.com/licenses/bsd-3-clause/",
            "example": [
                "\nDD = require('drag')(WIN);\nDD.init();"
            ],
            "since": "0.0.4"
        }
    },
    "classes": {
        "DD": {
            "name": "DD",
            "shortname": "DD",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "drag",
            "namespace": "",
            "file": "lib/drag-drop.js",
            "line": 1,
            "description": "Provides `drag and drop` functionality, without dropzones.\nFor `dropzone`-support, you should use the module: `drag-drop`.\n\n\n<i>Copyright (c) 2014 ITSA - https://github.com/itsa</i>\nNew BSD License - http://choosealicense.com/licenses/bsd-3-clause/",
            "example": [
                "\nDD = require('drag')(WIN);\nDD.init();"
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "lib/drag-drop.js",
            "line": 121,
            "description": "Objecthash containing all specific information about the particular drag-cycle.\nIt has a structure like this:\n\nddProps = {\n    dragNode {HtmlElement} Element that is dragged\n    x {Number} absolute x-position of the draggable inside `document` when the drag starts\n    y {Number} absolute y-position of the draggable inside `document` when the drag starts\n    inlineLeft {String} inline css of the property `left` when drag starts\n    inlineTop {String} inline css of the property `top` when drag starts\n    winConstrained {Boolean} whether the draggable should be constrained to `WIN`\n    xMouseLast {Number} absolute x-position of the mouse inside `document` when the drag starts\n    yMouseLast {Number} absolute y-position of the draggable inside `document` when the drag starts\n    winScrollLeft {Number} the left-scroll of WIN when drag starts\n    winScrollTop {Number} the top-scroll of WIN when drag starts\n    constrain = { // constrain-properties when constrained to a HtmlElement\n        xOrig {Number} x-position in the document, included with left-border-width\n        yOrig {Number} y-position in the document, included with top-border-width\n        x {Number} xOrig corrected with scroll-left of the constrained node\n        y {Number} yOrig corrected with scroll-top of the constrained node\n        w {Number} scrollWidth\n        h {Number} scrollHeight\n    };\n    relatives[{ // Array with objects that represent all draggables that come along with the master-draggable (in case of multiple items), excluded the master draggable itself\n        sourceNode {HtmlElement} original node (defined by drag-drop)\n        dragNode {HtmlElement} draggable node\n        shiftX {Number} the amount of left-pixels that this HtmlElement differs from the dragged element\n        shiftY {Number} the amount of top-pixels that this HtmlElement differs from the dragged element\n        inlineLeft {String} inline css of the property `left` when drag starts\n        inlineTop {String} inline css of the property `top` when drag starts\n    }]\n}",
            "itemtype": "property",
            "name": "ddProps",
            "default": "{}",
            "type": "Object",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 161,
            "description": "Default function for the `*:drag`-event",
            "itemtype": "method",
            "name": "_defFnDrag",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 187,
            "description": "Fired when the mouse comes back into the browser-WIN while drag was busy yet no buttons are pressed.\nThis is a correction to the fact that the mouseup-event wasn't noticed because the mouse was outside the browser.",
            "itemtype": "event",
            "name": "fake-mouseup",
            "access": "private",
            "tagname": "",
            "since": "0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 260,
            "description": "Default function for the `*:drop`-event",
            "itemtype": "method",
            "name": "_defFnDrop",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 305,
            "description": "Default function for the `*:dd`-event",
            "itemtype": "method",
            "name": "_defFnStart",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 328,
            "description": "Defines the definition of the `dd` event: the first phase of the drag-eventcycle (dd, *:drag, *:drop)",
            "itemtype": "method",
            "name": "_defineDDStart",
            "params": [
                {
                    "name": "emitterName",
                    "description": "the emitterName, which leads into the definition of event `emitterName:dd`",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 346,
            "description": "Default function for the `*:drag`-event",
            "itemtype": "method",
            "name": "_initializeDrag",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 379,
            "description": "Emitted during the drag-cycle of a draggable Element (while it is dragged).",
            "itemtype": "event",
            "name": "*:drag",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject including:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "target",
                            "description": "the HtmlElement that is being dragged",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "currentTarget",
                            "description": "the HtmlElement that is delegating",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "sourceTarget",
                            "description": "the deepest HtmlElement where the mouse lies upon",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "dd",
                            "description": "Promise that gets fulfilled when dragging is ended. The fullfilled-callback has no arguments.",
                            "type": "Promise"
                        },
                        {
                            "name": "xMouse",
                            "description": "the current x-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "yMouse",
                            "description": "the current y-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "clientX",
                            "description": "the current x-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "clientY",
                            "description": "the current y-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "xMouseOrigin",
                            "description": "the original x-position in the document when drag started (incl. scrollOffset)",
                            "type": "Number"
                        },
                        {
                            "name": "yMouseOrigin",
                            "description": "the original y-position in the document when drag started (incl. scrollOffset)",
                            "type": "Number"
                        },
                        {
                            "name": "relatives",
                            "description": "an optional list that the user could set in a `before`-subscriber of the `dd`-event\n       to inform which nodes are related to the draggable node and should be dragged as well.",
                            "type": "NodeList",
                            "optional": true
                        }
                    ]
                }
            ],
            "since": "0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 431,
            "description": "Emitted when drag-cycle of a draggable Element is ended.",
            "itemtype": "event",
            "name": "*:drop",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject including:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "target",
                            "description": "the HtmlElement that is being dragged",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "currentTarget",
                            "description": "the HtmlElement that is delegating",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "sourceTarget",
                            "description": "the deepest HtmlElement where the mouse lies upon",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "dd",
                            "description": "Promise that gets fulfilled when dragging is ended. The fullfilled-callback has no arguments.",
                            "type": "Promise"
                        },
                        {
                            "name": "xMouse",
                            "description": "the current x-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "yMouse",
                            "description": "the current y-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "clientX",
                            "description": "the current x-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "clientY",
                            "description": "the current y-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "xMouseOrigin",
                            "description": "the original x-position in the document when drag started (incl. scrollOffset)",
                            "type": "Number"
                        },
                        {
                            "name": "yMouseOrigin",
                            "description": "the original y-position in the document when drag started (incl. scrollOffset)",
                            "type": "Number"
                        },
                        {
                            "name": "relatives",
                            "description": "an optional list that the user could set in a `before`-subscriber of the `dd`-event\n       to inform which nodes are related to the draggable node and should be dragged as well.",
                            "type": "NodeList",
                            "optional": true
                        }
                    ]
                }
            ],
            "since": "0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 599,
            "description": "Prevented function for the `*:drop`-event",
            "itemtype": "method",
            "name": "_prevFnDrop",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 632,
            "description": "Prevented function for the `*:start`-event",
            "itemtype": "method",
            "name": "_prevFnStart",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 675,
            "description": "Engine behind the drag-drop-cycle.\nSets up a `mousedown` listener to initiate a drag-drop eventcycle. The eventcycle start whenever\none of these events happens on a HtmlElement with the attribute data-draggable=\"true\"`.\nThe drag-drop eventcycle consists of the events: `start`, `emitterName:drag` and `emitterName:drop`",
            "itemtype": "method",
            "name": "init",
            "access": "private",
            "tagname": "",
            "since": "0.0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/drag-drop.js",
            "line": 748,
            "description": "Emitted when a draggable Element's drag-cycle starts. You can use a `before`-subscriber to specify\ne.relatives, which should be a nodelist with HtmlElements, that should be dragged togehter with the master\ndraggable Element.",
            "itemtype": "event",
            "name": "*:dd",
            "params": [
                {
                    "name": "e",
                    "description": "eventobject including:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "target",
                            "description": "the HtmlElement that is being dragged",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "currentTarget",
                            "description": "the HtmlElement that is delegating",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "sourceTarget",
                            "description": "the deepest HtmlElement where the mouse lies upon",
                            "type": "HtmlElement"
                        },
                        {
                            "name": "dd",
                            "description": "Promise that gets fulfilled when dragging is ended. The fullfilled-callback has no arguments.",
                            "type": "Promise"
                        },
                        {
                            "name": "xMouse",
                            "description": "the current x-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "yMouse",
                            "description": "the current y-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "clientX",
                            "description": "the current x-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "clientY",
                            "description": "the current y-position in the WIN-view",
                            "type": "Number"
                        },
                        {
                            "name": "xMouseOrigin",
                            "description": "the original x-position in the document when drag started (incl. scrollOffset)",
                            "type": "Number"
                        },
                        {
                            "name": "yMouseOrigin",
                            "description": "the original y-position in the document when drag started (incl. scrollOffset)",
                            "type": "Number"
                        },
                        {
                            "name": "relatives",
                            "description": "an optional list that the user could set in a `before`-subscriber of the `dd`-event\n       to inform which nodes are related to the draggable node and should be dragged as well.",
                            "type": "NodeList",
                            "optional": true
                        }
                    ]
                }
            ],
            "since": "0.1",
            "class": "DD",
            "module": "drag"
        },
        {
            "file": "lib/extend-element.js",
            "line": 107,
            "description": "Set the position of an html element in page coordinates.",
            "itemtype": "method",
            "name": "setXY",
            "params": [
                {
                    "name": "node",
                    "description": "the dom node",
                    "type": "Node"
                },
                {
                    "name": "x",
                    "description": "x-value for new position (coordinates are page-based)",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y-value for new position (coordinates are page-based)",
                    "type": "Number"
                }
            ],
            "since": "0.0.1",
            "class": "",
            "module": "drag"
        },
        {
            "file": "lib/extend-element.js",
            "line": 144,
            "description": "Set the position of an html element in page coordinates.",
            "itemtype": "method",
            "name": "setXY",
            "params": [
                {
                    "name": "node",
                    "description": "the dom node",
                    "type": "Node"
                },
                {
                    "name": "dragId",
                    "description": "the dom node's data-attr: data-dragable",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "x-value for new position (coordinates are page-based)",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y-value for new position (coordinates are page-based)",
                    "type": "Number"
                }
            ],
            "since": "0.0.1",
            "class": "",
            "module": "drag"
        },
        {
            "file": "lib/extend-element.js",
            "line": 211,
            "description": "Set the position of an html element using HTML5",
            "itemtype": "method",
            "name": "setXYtranform",
            "params": [
                {
                    "name": "dragId",
                    "description": "the dom node's data-attr: data-dragable",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "x-value for new position (coordinates are page-based)",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "y-value for new position (coordinates are page-based)",
                    "type": "Number"
                }
            ],
            "since": "0.0.1",
            "class": "",
            "module": "drag"
        }
    ],
    "warnings": []
}